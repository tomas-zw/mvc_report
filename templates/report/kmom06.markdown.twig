# Kmom06
***

## PHPMetrics

Här var det utan tvekan bilden under "Maintainability / Complexity" som gillade. 
Den gav en omedelbar blick över vilka delar av kodbasen som kanske behövde lite 
mer kärlek. Övrigt så var det väldigt mycket siffror som förlorade lite av sitt 
värde iom att jag inte har någon direkt referens. Jag har bara min egen kod att 
jämföra mot och det säger egentligen bara att nått är bättre än något annan, inte 
hur pass bra eller dåligt det är. Kändes lite som att försöka svara på 
"hur långt är ett snöre?"

## Scrutinizer

Integrationen gick smärtfritt och här var det inte bara siffror utan även ett 
betyg, och det var något som av naturliga skäl var mycket lättare att ha en referns 
till. Detta verktyget hade också ett bättre Issues tab med tydlig info som jag 
hade nytta av när jag skulle förbättra min kod.
Jag fick 10.00 och en Coverage på 39% på första försöket.

## Kodkvalitet

Min syn på kodkvalitet har ändrats ganska så mycket sen vi började med tester. 
Då blev det väldigt tydligt att dom delarna som var lätta att testa var oftast 
också lättast att förstå eller göra ändringar i.  
Jag tror inte att badges ska användas för att ge ett absolut svar på om en kodbas 
är bra eller kass. Men om det är ett open-source projekt så ger det en fingervisning 
att man är transparant med sin kod och om någon vill hoppa på så kan hen gå igenom 
rapporterna själv, och därefter ta ett beslut om hen vill använda/hjälpa etc med 
projektet. Sen om det skulle gå från en 10'a'till en 2'a efter en push så blir det 
också en stor hjälp att det lätt upptäcks att något måste gått snett.

## TIL

Jag var skeptisk när vi började med statisk analys av vår kod, men måste erkänna 
att jag gillar att ha den i ryggen. Både som en trygghet som hjälpsamt talar om 
när nått inte är så bra, men även som en kompis som talar om när det är bra.
